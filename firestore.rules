/**
 * @fileoverview Firestore Security Rules for Primavera Delivery application.
 *
 * Core Philosophy:
 * This ruleset prioritizes developer flexibility during prototyping. It disables Firestore Security Rules functionality.
 * This approach acknowledges that the app has a direct system in place to resolve access control and authorization issues.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profiles.
 * - /productGroups/{productGroupId}: Stores product groups.
 * - /products/{productId}: Stores products.
 * - /users/{userId}/shoppingCarts/{cartId}: Stores shopping carts.
 * - /users/{userId}/shoppingCarts/{cartId}/cartItems/{cartItemId}: Stores cart items.
 * - /users/{userId}/orders/{orderId}: Stores orders.
 * - /orders/{orderId}/orderItems/{orderItemId}: Stores order items.
 * - /orders/{orderId}/payments/{paymentId}: Stores payments.
 * - /roles_admin/{uid}: Stores admin roles. Document ID is the user's UID.
 *
 * Key Security Decisions:
 * - All read and write access is allowed (`if true;`) to facilitate rapid prototyping and development.
 * - The application's access control logic is handled directly within the app code, bypassing Firestore Security Rules.
 *
 * WARNING: This ruleset is for PROTOTYPING ONLY and should NOT be used in a production environment.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows all read and write access to user profiles.
     * @path /users/{userId}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write access to product groups.
     * @path /productGroups/{productGroupId}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /productGroups/{productGroupId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write access to products.
     * @path /products/{productId}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /products/{productId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write access to shopping carts.
     * @path /users/{userId}/shoppingCarts/{cartId}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /users/{userId}/shoppingCarts/{cartId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write access to cart items.
     * @path /users/{userId}/shoppingCarts/{cartId}/cartItems/{cartItemId}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /users/{userId}/shoppingCarts/{cartId}/cartItems/{cartItemId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write access to orders.
     * @path /users/{userId}/orders/{orderId}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /users/{userId}/orders/{orderId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write access to order items.
     * @path /orders/{orderId}/orderItems/{orderItemId}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /orders/{orderId}/orderItems/{orderItemId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write access to payments.
     * @path /orders/{orderId}/payments/{paymentId}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /orders/{orderId}/payments/{paymentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write access to admin roles.
     * @path /roles_admin/{uid}
     * @allow (create, get, list, update, delete) - Any user can perform any operation.
     * @deny None. All operations are allowed.
     * @principle Disables Firestore Security Rules functionality.
     */
    match /roles_admin/{uid} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}