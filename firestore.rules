rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Regra para a coleção de usuários
    match /users/{userId} {
      // Permite que um usuário crie seu próprio documento e leia seu próprio perfil.
      // A leitura é necessária para a transação do pedido.
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.uid == userId;

      // Subcoleção de pedidos (orders)
      match /orders/{orderId} {
        // Permite que um usuário crie e leia seus próprios pedidos.
        // A atualização é permitida para que o usuário possa cancelar.
        allow create, read, update: if request.auth != null && request.auth.uid == userId;
        // Excluir pedidos é proibido para manter o histórico.
        allow delete: if false;
      }

      // Subcoleção de carrinhos (shoppingCarts)
      match /shoppingCarts/{cartId} {
        // Permite que um usuário gerencie seu próprio documento de carrinho.
        allow read, write: if request.auth != null && request.auth.uid == userId;

        // Subcoleção de itens do carrinho (cartItems)
        match /cartItems/{cartItemId} {
          // Permite que o usuário adicione, leia, atualize e exclua itens do seu próprio carrinho.
          // A exclusão é essencial para a transação de finalização do pedido.
          allow read, write, delete: if request.auth != null && request.auth.uid == userId;
        }
      }
    }

    // Regra para a coleção de produtos
    match /products/{productId} {
      // Leitura de produtos é pública.
      allow read: if true;
      // Escrita (criação, atualização, exclusão) é permitida para qualquer usuário autenticado.
      // Isso é necessário porque o painel de administração não usa 'admin claims'.
      allow write: if request.auth != null;
    }

    // Regra para a coleção de grupos de produtos
    match /productGroups/{groupId} {
      // Leitura é pública.
      allow read: if true;
      // Escrita é permitida para usuários autenticados (para o painel de admin).
      allow write: if request.auth != null;
    }

     // Regra de fallback para a coleção 'orders' (usada por collectionGroup)
    match /orders/{orderId} {
      // Esta regra é uma salvaguarda, mas as permissões são primariamente
      // definidas sob /users/{userId}/orders.
      // Permite leitura se o solicitante for o dono do pedido (verificando o campo userId).
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
