/**
 * @file Firestore Security Rules
 * @description This ruleset is designed to allow full read and write access to all users, effectively disabling security restrictions.
 *
 * Core Philosophy: All access is granted, effectively disabling security restrictions.
 * Data Structure: The structure mirrors the application data model, with collections for users, products, shopping carts, orders, and admin roles.
 * Key Security Decisions: All read and write operations are allowed.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows all access to user profiles.
     * @path /users/{userId}
     * @allow (create, get, list, update, delete)
     * @principle No security is enforced.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all access to product information.
     * @path /products/{productId}
     * @allow (create, get, list, update, delete)
     * @principle No security is enforced.
     */
    match /products/{productId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all access to shopping carts for each user.
     * @path /users/{userId}/shoppingCarts/{cartId}
     * @allow (create, get, list, update, delete)
     * @principle No security is enforced.
     */
    match /users/{userId}/shoppingCarts/{cartId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all access to cart items within a shopping cart.
     * @path /users/{userId}/shoppingCarts/{cartId}/cartItems/{cartItemId}
     * @allow (create, get, list, update, delete)
     * @principle No security is enforced.
     */
    match /users/{userId}/shoppingCarts/{cartId}/cartItems/{cartItemId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all access to order information for each user.
     * @path /users/{userId}/orders/{orderId}
     * @allow (create, get, list, update, delete)
     * @principle No security is enforced.
     */
    match /users/{userId}/orders/{orderId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all access to order items within an order.
     * @path /orders/{orderId}/orderItems/{orderItemId}
     * @allow (create, get, list, update, delete)
     * @principle No security is enforced.
     */
    match /orders/{orderId}/orderItems/{orderItemId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all access to payments associated with an order.
     * @path /orders/{orderId}/payments/{paymentId}
     * @allow (create, get, list, update, delete)
     * @principle No security is enforced.
     */
    match /orders/{orderId}/payments/{paymentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all access to admin role.
     * @path /roles_admin/{uid}
     * @allow (create, get, list, update, delete)
     * @principle No security is enforced.
     */
    match /roles_admin/{uid} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}