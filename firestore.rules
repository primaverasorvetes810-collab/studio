rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ðŸ”¹ Cada usuÃ¡rio pode acessar apenas seus prÃ³prios dados
    match /users/{userId} {
      // O prÃ³prio usuÃ¡rio pode criar e ler seu perfil
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;

      // ðŸ”¹ SubcoleÃ§Ã£o: pedidos (orders)
      match /orders/{orderId} {
        allow create, read, update, delete: if request.auth != null && request.auth.uid == userId;
      }

      // ðŸ”¹ SubcoleÃ§Ã£o: carrinho (cart)
      match /shoppingCarts/{cartId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        match /cartItems/{itemId} {
          allow create, read, update, delete: if request.auth != null && request.auth.uid == userId;
        }
      }
    }

    // ðŸ”¹ Grupos de Produtos â€” qualquer usuÃ¡rio logado pode escrever
    match /productGroups/{groupId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }

    // ðŸ”¹ Produtos â€” qualquer usuÃ¡rio logado pode escrever
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }

    // Admin-only collections
    match /roles_admin/{uid} {
      allow read: if true; // Public read might be ok, but restrictive is safer.
      allow write: if false; // Should only be managed from server-side/console.
    }
  }
}