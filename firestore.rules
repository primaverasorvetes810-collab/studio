
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/roles_admin/$(request.auth.uid));
    }
    
    match /roles_admin/{uid} {
      allow create: if request.auth != null; // ANY authenticated user can create an admin role for themselves.
      allow read, delete: if isAdmin();
    }

    match /users/{userId} {
      allow read, create, update: if isSignedIn() && isOwner(userId);
      // Admins can read the list of all users for management
      allow list: if isAdmin();

      match /orders/{orderId} {
        allow read, create: if isSignedIn() && isOwner(userId);
        allow list, update: if isAdmin();
      }

      match /shoppingCarts/{cartId} {
        allow read, create, update, delete: if isSignedIn() && isOwner(userId);

        match /cartItems/{cartItemId} {
          allow read, create, update, delete: if isSignedIn() && isOwner(userId);
        }
      }
    }
    
    match /productGroups/{productGroupId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
